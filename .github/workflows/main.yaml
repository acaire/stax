name: CI

on: [push]

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python: [3.8]
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python }}
      uses: actions/setup-python@v1
      with:
        python-version: ${{ matrix.python }}
    - name: Install stax
      run: |
        python -m pip install --upgrade pip
        pip install pipenv
        pipenv install --dev
    - name: Run pytest
      run: |
        pipenv run pytest --cov=stax
        coveralls
    - name: Run isort
      run: |
        pipenv run isort --recursive --check-only setup.py tests stax
    - name: Run yapf
      run: |
        pipenv run yapf -d -r setup.py tests stax

  publish:
    needs: build
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python
      uses: actions/setup-python@v1
      with:
        python-version: '3.8'
    - name: Install publish dependencies
      run: |
        pip install pipenv setuptools wheel twine
    - name: Build package
      run: |
        pipenv run python setup.py sdist bdist_wheel
    - if: startsWith(github.event.ref, 'refs/tags')
      name: Publish package
      uses: pypa/gh-action-pypi-publish@master
      with:
        user: __token__
        password: ${{ secrets.pypi_password }}
    - if: startsWith(github.event.ref, 'refs/tags')
      name: Get the tag name
      id: get_tag_name
      run: echo ::set-output name=TAG_NAME::$(echo $GITHUB_REF | cut -d / -f 3)
    - if: startsWith(github.event.ref, 'refs/tags')
      name: Wait for the Pypi package to be ready
      run: bash -c "while ! pip install stax==${{ steps.get_tag_name.outputs.TAG_NAME }}; do echo Sleeping for 5 seconds; sleep 5; done"
    - if: startsWith(github.event.ref, 'refs/tags')
      name: Publish docker image
      uses: docker/build-push-action@v1
      with:
        username: ${{ secrets.docker_username }}
        password: ${{ secrets.docker_password }}
        repository: acaire/stax
        tag_with_ref: true
        build_args: VERSION=${{ steps.get_tag_name.outputs.TAG_NAME }}
